{"ast":null,"code":"export const CartReducer = (state, action) => {\n  debugger;\n  let index = -1;\n  if (action.payload) {\n    index = state.cartItems.findIndex(p => p.id === action.payload.id);\n  }\n  let newItems = [...state.cartItems]; // copy state\n\n  switch (action.type) {\n    case 'ADD_TO_CART':\n    case 'INCQTY':\n      if (index === -1) {\n        // state.cartItems.push({ ...action.payload, quantity: 1 });\n        newItems.push({\n          ...action.payload,\n          quantity: 1\n        });\n      } else {\n        // state.cartItems[index].quantity++;\n        newItems[index].quantity++;\n      }\n      break;\n    case 'REMOVE_FROM_CART':\n      if (index > -1) {\n        // state.cartItems.splice(index, 1);\n        newItems = state.cartItems.filter(p => p.id !== action.payload.id);\n      }\n      break;\n    case 'DECQTY':\n      if (index > -1) {\n        // state.cartItems[index].quantity--;\n        newItems[index].quantity--;\n      }\n      break;\n    case 'CLEAR_CART':\n      mewItems = [];\n      break;\n    default:\n      break;\n  }\n  state.cartItems = newItems;\n  return state;\n};\n_c = CartReducer;\nvar _c;\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"names":["CartReducer","state","action","index","payload","cartItems","findIndex","p","id","newItems","type","push","quantity","filter","mewItems","_c","$RefreshReg$"],"sources":["/Users/tacodaddy/learnReact/e-store/src/contexts/CartReducer.js"],"sourcesContent":["export const CartReducer = (state, action) => {\n    debugger;\n\n    let index = -1;\n    if (action.payload) {\n        index = state.cartItems.findIndex(p => p.id === action.payload.id);\n    }\n\n    let newItems = [...state.cartItems]; // copy state\n\n    switch (action.type) {\n        case 'ADD_TO_CART':\n        case 'INCQTY':\n            if (index === -1) {\n                // state.cartItems.push({ ...action.payload, quantity: 1 });\n                                newItems.push({ ...action.payload, quantity: 1 });\n\n            } else {\n                // state.cartItems[index].quantity++;\n                newItems[index].quantity++;\n\n            }\n            break;\n\n        case 'REMOVE_FROM_CART':\n            if (index > -1) {\n                // state.cartItems.splice(index, 1);\n                newItems = state.cartItems.filter(p => p.id !== action.payload.id);\n            }\n            break;\n\n        case 'DECQTY':\n            if (index > -1) {\n                // state.cartItems[index].quantity--;\n                newItems[index].quantity--;\n            }\n            break;\n\n        case 'CLEAR_CART':\n            mewItems = [];\n            break;\n            \n        default:\n            break;\n    }\n    state.cartItems = newItems;\n    return state;\n}"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC1C;EAEA,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,IAAID,MAAM,CAACE,OAAO,EAAE;IAChBD,KAAK,GAAGF,KAAK,CAACI,SAAS,CAACC,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,CAAC;EACtE;EAEA,IAAIC,QAAQ,GAAG,CAAC,GAAGR,KAAK,CAACI,SAAS,CAAC,CAAC,CAAC;;EAErC,QAAQH,MAAM,CAACQ,IAAI;IACf,KAAK,aAAa;IAClB,KAAK,QAAQ;MACT,IAAIP,KAAK,KAAK,CAAC,CAAC,EAAE;QACd;QACgBM,QAAQ,CAACE,IAAI,CAAC;UAAE,GAAGT,MAAM,CAACE,OAAO;UAAEQ,QAAQ,EAAE;QAAE,CAAC,CAAC;MAErE,CAAC,MAAM;QACH;QACAH,QAAQ,CAACN,KAAK,CAAC,CAACS,QAAQ,EAAE;MAE9B;MACA;IAEJ,KAAK,kBAAkB;MACnB,IAAIT,KAAK,GAAG,CAAC,CAAC,EAAE;QACZ;QACAM,QAAQ,GAAGR,KAAK,CAACI,SAAS,CAACQ,MAAM,CAACN,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,CAAC;MACtE;MACA;IAEJ,KAAK,QAAQ;MACT,IAAIL,KAAK,GAAG,CAAC,CAAC,EAAE;QACZ;QACAM,QAAQ,CAACN,KAAK,CAAC,CAACS,QAAQ,EAAE;MAC9B;MACA;IAEJ,KAAK,YAAY;MACbE,QAAQ,GAAG,EAAE;MACb;IAEJ;MACI;EACR;EACAb,KAAK,CAACI,SAAS,GAAGI,QAAQ;EAC1B,OAAOR,KAAK;AAChB,CAAC;AAAAc,EAAA,GA/CYf,WAAW;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}