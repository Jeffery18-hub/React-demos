{"ast":null,"code":"const isWinner = (gameBoard, currentMove, currentPlayer) => {\n  // gameBoard is an array of 16 elements, and pass by reference\n  const board = [...gameBoard]; // copy of the array of game state\n  board[currentMove] = currentPlayer;\n  const winLines = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11], [12, 13, 14, 15], [0, 4, 8, 12], [1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [0, 5, 10, 15], [3, 6, 9, 12]];\n  for (let i = 0; i < winLines.length; i++) {\n    const [c1, c2, c3, c4] = winLines[i];\n    if (board[c1] > 0 && board[c1] === board[c2] && board[c2] === board[c3] && board[c3] === board[c4]) {\n      return true;\n    }\n  }\n  return false;\n};\nexport { isWinner };","map":{"version":3,"names":["isWinner","gameBoard","currentMove","currentPlayer","board","winLines","i","length","c1","c2","c3","c4"],"sources":["/Users/tacodaddy/learnReact/connect-game/src/helper.js"],"sourcesContent":["const isWinner = (gameBoard,currentMove, currentPlayer)=>{ // gameBoard is an array of 16 elements, and pass by reference\n    const board = [...gameBoard]; // copy of the array of game state\n    board[currentMove] = currentPlayer;\n    \n    const winLines = [\n        [0,1,2,3],\n        [4,5,6,7],\n        [8,9,10,11],\n        [12,13,14,15],\n        [0,4,8,12],\n        [1,5,9,13],\n        [2,6,10,14],\n        [3,7,11,15],\n        [0,5,10,15],\n        [3,6,9,12]\n    ];\n    \n    for (let i = 0; i < winLines.length; i++) {\n        const [c1,c2,c3,c4] = winLines[i];\n        if (board[c1]>0 &&\n            board[c1] === board[c2] && \n            board[c2] === board[c3] && \n            board[c3] === board[c4] ) {\n            return true;\n        }\n    }\n    return false;\n\n}\n\nexport {isWinner};"],"mappings":"AAAA,MAAMA,QAAQ,GAAGA,CAACC,SAAS,EAACC,WAAW,EAAEC,aAAa,KAAG;EAAE;EACvD,MAAMC,KAAK,GAAG,CAAC,GAAGH,SAAS,CAAC,CAAC,CAAC;EAC9BG,KAAK,CAACF,WAAW,CAAC,GAAGC,aAAa;EAElC,MAAME,QAAQ,GAAG,CACb,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACT,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACT,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,EACX,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EACb,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,EACV,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,EACV,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,CACb;EAED,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,MAAM,CAACE,EAAE,EAACC,EAAE,EAACC,EAAE,EAACC,EAAE,CAAC,GAAGN,QAAQ,CAACC,CAAC,CAAC;IACjC,IAAIF,KAAK,CAACI,EAAE,CAAC,GAAC,CAAC,IACXJ,KAAK,CAACI,EAAE,CAAC,KAAKJ,KAAK,CAACK,EAAE,CAAC,IACvBL,KAAK,CAACK,EAAE,CAAC,KAAKL,KAAK,CAACM,EAAE,CAAC,IACvBN,KAAK,CAACM,EAAE,CAAC,KAAKN,KAAK,CAACO,EAAE,CAAC,EAAG;MAC1B,OAAO,IAAI;IACf;EACJ;EACA,OAAO,KAAK;AAEhB,CAAC;AAED,SAAQX,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}