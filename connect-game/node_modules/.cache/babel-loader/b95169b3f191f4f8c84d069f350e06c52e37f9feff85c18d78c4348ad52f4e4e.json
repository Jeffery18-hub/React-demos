{"ast":null,"code":"import _slicedToArray from\"/Users/tacodaddy/learnReact/connect-game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/Users/tacodaddy/learnReact/connect-game/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";export var isWinner=function isWinner(gameBoard,currentMove,currentPlayer){// gameBoard is an array of 16 elements, and pass by reference\nvar board=_toConsumableArray(gameBoard);// copy of the array of game state\nboard[currentMove]=currentPlayer;var winLines=[[0,1,2,3],[4,5,6,7],[8,9,10,11],[12,13,14,15],[0,4,8,12],[1,5,9,13],[2,6,10,14],[3,7,11,15],[0,5,10,15],[3,6,9,12]];for(var i=0;i<winLines.length;i++){var _winLines$i=_slicedToArray(winLines[i],4),c1=_winLines$i[0],c2=_winLines$i[1],c3=_winLines$i[2],c4=_winLines$i[3];if(board[c1]>0&&board[c1]===board[c2]&&board[c2]===board[c3]&&board[c3]===board[c4]){return true;}}return false;};export var isDraw=function isDraw(gameBoard,currentMove,currentPlayer){var board=_toConsumableArray(gameBoard);// copy of the array of game state\nboard[currentMove]=currentPlayer;return board.every(function(value){return value>0;});};var getRndMove=function getRndMove(gameBoard){var suggestMoves=[];for(var i=0;i<gameBoard.length;i++){if(gameBoard[i]===0){suggestMoves.push(i);}}var suggestMove=suggestMoves[Math.floor(Math.random()*suggestMoves.length)];return suggestMove;};var getPosition=function getPosition(gameBoard,moveChecks){for(var check=0;check<moveChecks.length;check++){for(var i=0;i<moveChecks[check].max;i+=moveChecks[check].step){var series=gameBoard[i+moveChecks[check].indices[0]].toString()+gameBoard[i+moveChecks[check].indices[1]].toString()+gameBoard[i+moveChecks[check].indices[2]].toString()+gameBoard[i+moveChecks[check].indices[3]].toString();switch(series){case\"1110\":case\"2220\":return i+moveChecks[check].indices[3];case\"1101\":case\"2202\":return i+moveChecks[check].indices[2];case\"1011\":case\"2022\":return i+moveChecks[check].indices[1];case\"0111\":case\"0222\":return i+moveChecks[check].indices[0];default:}}}return-1;};export var getSuggestMove=function getSuggestMove(gameBoard){var moveChecks=[// store the json object of the move\n{// vertical\nindices:[0,4,8,12],// [1,5,9,13] [2,6,10,14] [3,7,11,15]\nmax:4,step:1},{// horizontal\nindices:[0,1,2,3],// [4,5,6,7] [8,9,10,11] [12,13,14,15]\nmax:16,step:4},{// diagonal\nindices:[0,5,10,15],max:16,step:16},{// diagonal\nindices:[3,6,9,12],max:16,step:16}];var suggestMove=getPosition(gameBoard,moveChecks);if(suggestMove>-1)return suggestMove;return getRndMove(gameBoard);};","map":{"version":3,"names":["isWinner","gameBoard","currentMove","currentPlayer","board","_toConsumableArray","winLines","i","length","_winLines$i","_slicedToArray","c1","c2","c3","c4","isDraw","every","value","getRndMove","suggestMoves","push","suggestMove","Math","floor","random","getPosition","moveChecks","check","max","step","series","indices","toString","getSuggestMove"],"sources":["/Users/tacodaddy/learnReact/connect-game/src/helper.js"],"sourcesContent":["export const isWinner = (gameBoard,currentMove, currentPlayer)=>{ // gameBoard is an array of 16 elements, and pass by reference\n    let board = [...gameBoard]; // copy of the array of game state\n    board[currentMove] = currentPlayer;\n    \n    const winLines = [\n        [0,1,2,3],\n        [4,5,6,7],\n        [8,9,10,11],\n        [12,13,14,15],\n        [0,4,8,12],\n        [1,5,9,13],\n        [2,6,10,14],\n        [3,7,11,15],\n        [0,5,10,15],\n        [3,6,9,12]\n    ];\n    \n    for (let i = 0; i < winLines.length; i++) {\n        const [c1,c2,c3,c4] = winLines[i];\n        if (board[c1]>0 &&\n            board[c1] === board[c2] && \n            board[c2] === board[c3] && \n            board[c3] === board[c4] ) {\n            return true;\n        }\n    }\n    return false;\n\n}\n\nexport const isDraw = (gameBoard, currentMove,currentPlayer) => {\n    let board = [...gameBoard]; // copy of the array of game state\n    board[currentMove] = currentPlayer;\n    return board.every((value) => value > 0);\n\n}\n\n\nconst getRndMove = (gameBoard) => {\n    let suggestMoves = [];\n    for (let i = 0; i < gameBoard.length; i++) {\n        if (gameBoard[i] === 0) {\n            suggestMoves.push(i);\n        }\n    }\n    let suggestMove = suggestMoves[Math.floor(Math.random() * suggestMoves.length)];\n\n    return suggestMove;\n}\n\nconst getPosition = (gameBoard, moveChecks) => {\n    for (let check = 0; check < moveChecks.length; check++) {\n        for(let i= 0; i < moveChecks[check].max; i+= moveChecks[check].step) {\n            let series = gameBoard[i+ moveChecks[check].indices[0]].toString() + \n            gameBoard[i+ moveChecks[check].indices[1]].toString() +\n            gameBoard[i+ moveChecks[check].indices[2]].toString() +\n            gameBoard[i+ moveChecks[check].indices[3]].toString();\n\n            switch (series) {\n                case \"1110\":\n                case \"2220\":\n                    return i+ moveChecks[check].indices[3];\n                case \"1101\":\n                case \"2202\":\n                    return i+ moveChecks[check].indices[2];\n                case \"1011\":\n                case \"2022\":\n                    return i+ moveChecks[check].indices[1];\n                case \"0111\":\n                case \"0222\":\n                    return i+ moveChecks[check].indices[0];\n                default:\n            }\n        }\n    }\n    return -1;\n}\n\n\n\nexport const getSuggestMove = (gameBoard) => {\n    let moveChecks = [\n        // store the json object of the move\n        {// vertical\n            indices: [0, 4, 8, 12], // [1,5,9,13] [2,6,10,14] [3,7,11,15]\n            max:4,\n            step:1,\n        },\n        {// horizontal\n            indices: [0, 1, 2, 3], // [4,5,6,7] [8,9,10,11] [12,13,14,15]\n            max:16,\n            step:4,\n        },\n        {// diagonal\n            indices: [0, 5, 10, 15],\n            max:16,\n            step:16,\n        },\n        {// diagonal\n            indices: [3, 6, 9, 12],\n            max:16,\n            step:16,\n        },\n    ];\n\n    let suggestMove = getPosition(gameBoard, moveChecks);\n    if (suggestMove > -1) return suggestMove;\n    return getRndMove(gameBoard);\n    \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}